[project]
name = "pythonic-template"
version = "0.1.0"
description = "A modern, comprehensive Cookiecutter template for Python projects following best practices"
readme = "README.md"
license = { file = "LICENSE" }
authors = [
    { name = "Adam Amer", email = "adam@example.com" }
]
maintainers = [
    { name = "Adam Amer", email = "adam@example.com" }
]
requires-python = ">=3.9"
keywords = [
    "cookiecutter",
    "template",
    "python",
    "packaging",
    "development",
    "modern",
    "uv",
    "ruff",
    "pytest"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities"
]
dependencies = [
    "cookiecutter>=2.6.0",
]

[project.urls]
Homepage = "https://github.com/adamamer20/pythonic-template"
Documentation = "https://adamamer20.github.io/pythonic-template/"
Repository = "https://github.com/adamamer20/pythonic-template"
"Bug Tracker" = "https://github.com/adamamer20/pythonic-template/issues"
Changelog = "https://github.com/adamamer20/pythonic-template/blob/main/CHANGELOG.md"


[dependency-groups]
dev = [
    "cruft>=2.16.0",
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.6.14",
    "mkdocstrings[python]>=0.29.1",
    "pre-commit>=4.2.0",
    "pytest>=8.3.5",
    "pytest-cov>=6.1.1",
    "ruff>=0.11.11",
]

[tool.uv]
default-groups = ["dev"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.ruff]
target-version = "py39"
line-length = 88
fix = true

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "UP",     # pyupgrade
    "ARG001", # unused-function-argument
    "SIM",    # flake8-simplify
    "TCH",    # flake8-type-checking
    "TID",    # flake8-tidy-imports
    "Q",      # flake8-quotes
    "FBT",    # flake8-boolean-trap
    "PL",     # pylint
    "PT",     # flake8-pytest-style
]
ignore = [
    "E501",   # line-too-long (handled by formatter)
    "PLR0913", # too-many-arguments
    "PLR0912", # too-many-branches
    "PLR0915", # too-many-statements
    "FBT001", # boolean-type-hint-positional-argument
    "FBT002", # boolean-default-value-positional-argument
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.pytest.ini_options]
minversion = "8.0"
pythonpath = "src"
testpaths = ["tests"]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning"
]
